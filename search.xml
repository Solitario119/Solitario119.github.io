<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Python机器学习】特征工程</title>
      <link href="/2023/03/08/%E3%80%90Python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%91%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
      <url>/2023/03/08/%E3%80%90Python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%91%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="特征工程">特征工程</h1><p>对原始数据进行一系列工程处理，将其提炼为特征，作为输入供算法和模型使用。从本质上来讲，特征工程是一个表示和展现数据的过程。在实际工作中，特征工程旨在去除原始数据中的杂质和冗余，以设计更高效的特征以刻画求解的问题与预测模型之间的关系。</p><p>在实际的模型应用中并不是特征越多越好，特征越多固然会给我们带来很多额外的信息，但是与此同时，一方面，这些额外的信息也增加实验的时间复杂度和最终模型的复杂度，造成的后果就是特征的“维度灾难”，使得计算耗时大幅度增加；另一方面，可能会导致模型的复杂程度上升而使得模型变得不通用。所以我们就要在众多的特征中选择尽可能相关的特征和有效的特征，使得计算的时间复杂度大幅度减少来简化模型，并且保证最终模型的有效性不被减弱或者减弱很少，这也就是我们特征选择的目的。</p><h2 id="数据集">数据集</h2><p>数据集分为训练集和测试集 ，可用的数据集有：scikit-learn、Kaggle、UCI等等</p><p>以scikit-learn中部分数据集为例：</p><table><thead><tr class="header"><th>函数</th><th>返回</th></tr></thead><tbody><tr class="odd"><td><a href="https://scikit-learn.org.cn/view/515.html"><code>load_boston</code></a>(*[, return_X_y])</td><td>加载并返回波士顿房价数据集（回归）。</td></tr><tr class="even"><td><a href="https://scikit-learn.org.cn/view/542.html"><code>load_iris</code></a>(*[, return_X_y, as_frame])</td><td>加载并返回鸢尾花数据集（分类）。</td></tr><tr class="odd"><td><a href="https://scikit-learn.org.cn/view/520.html"><code>load_diabetes</code></a>(*[, return_X_y, as_frame])</td><td>加载并返回糖尿病数据集（回归）。</td></tr><tr class="even"><td><a href="https://scikit-learn.org.cn/view/532.html"><code>load_digits</code></a>(*[, n_class, return_X_y, as_frame])</td><td>加载并返回数字数据集（分类）。</td></tr><tr class="odd"><td><a href="https://scikit-learn.org.cn/view/543.html"><code>load_linnerud</code></a>(*[, return_X_y, as_frame])</td><td>加载并返回linnerud物理锻炼数据集。</td></tr><tr class="even"><td><a href="https://scikit-learn.org.cn/view/549.html"><code>load_wine</code></a>(*[, return_X_y, as_frame])</td><td>加载并返回葡萄酒数据集（分类）。</td></tr><tr class="odd"><td><a href="https://scikit-learn.org.cn/view/518.html"><code>load_breast_cancer</code></a>(*[, return_X_y, as_frame])</td><td>加载并返回威斯康星州乳腺癌数据集（分类）。</td></tr></tbody></table><h3 id="sklearn数据集使用">sklearn数据集使用</h3><h4 id="加载数据集">加载数据集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sklearn.datasets 数据集</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载本地小型标准数据集</span></span><br><span class="line">datasets.load_iris()</span><br><span class="line">datasets.load_boston()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载线上大型数据集</span></span><br><span class="line">datasets.fetch_iris(data_home = <span class="literal">None</span>, subset = <span class="string">&quot;train&quot;</span>)</span><br><span class="line"><span class="comment"># 第一个参数表示数据集下载到本地的地址</span></span><br><span class="line"><span class="comment"># 第二个参数表示子集类型 (train, test, all)</span></span><br></pre></td></tr></table></figure><h4 id="返回值分析">返回值分析</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"></span><br><span class="line">iris = load_iris()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;鸢尾花数据集：\n&quot;</span>, iris)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;查看数据集描述：\n&quot;</span>, iris[<span class="string">&quot;DESCR&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;查看特征值名字：\n&quot;</span>, iris.feature_names)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;查看特征值：\n&quot;</span>, iris.data, iris.data.shape)</span><br></pre></td></tr></table></figure><p>返回数据类型为<code>datasets.base.Bunch</code>（字典格式），包含以下字段：</p><table><thead><tr class="header"><th style="text-align: center;">字段</th><th style="text-align: center;">内容</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">data</td><td style="text-align: center;">特征数据数组</td></tr><tr class="even"><td style="text-align: center;">target</td><td style="text-align: center;">标签数组</td></tr><tr class="odd"><td style="text-align: center;">DESCR</td><td style="text-align: center;">数据描述</td></tr><tr class="even"><td style="text-align: center;">feature_names</td><td style="text-align: center;">特征名称</td></tr><tr class="odd"><td style="text-align: center;">target_names</td><td style="text-align: center;">标签名称</td></tr></tbody></table><p>鸢尾花数据集特征为：</p><table><colgroup><col style="width: 16%" /><col style="width: 83%" /></colgroup><thead><tr class="header"><th><strong>实例数</strong></th><th>150（三类各50个）</th></tr></thead><tbody><tr class="odd"><td><strong>属性数量</strong></td><td>4个数值，预测属性和类别</td></tr><tr class="even"><td><strong>属性信息</strong></td><td>- 萼片长度（厘米） - 萼片宽度（厘米） - 花瓣长度（厘米） - 花瓣宽度（厘米）<br />- 类： Setosa鸢尾花 Versicolour鸢尾花 Virginica鸢尾花</td></tr><tr class="odd"><td><strong>统计摘要</strong></td><td><img src="https://scikit-learn.org.cn/upload/04b38aae43dac50737b115e692ee2d5d.png" alt="img" /></td></tr><tr class="even"><td><strong>缺失值</strong></td><td>无</td></tr><tr class="odd"><td><strong>类别分布</strong></td><td>3个类别中的每类别占33.3％。</td></tr><tr class="even"><td><strong>创作者</strong></td><td>R.A. Fisher</td></tr><tr class="odd"><td><strong>捐赠者</strong></td><td>Michael Marshall (<a href="mailto:MARSHALL%PLU@io.arc.nasa.gov">MARSHALL%PLU@io.arc.nasa.gov</a>)</td></tr><tr class="even"><td><strong>日期</strong></td><td>1988年7月</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.gairuo.com/file/data/dataset/iris.data&#x27;</span></span><br><span class="line">df = pd.read_csv(url)</span><br><span class="line">df.head()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     sepal_length  sepal_width  petal_length  petal_width    species</span></span><br><span class="line"><span class="string">0             5.1          3.5           1.4          0.2     setosa</span></span><br><span class="line"><span class="string">1             4.9          3.0           1.4          0.2     setosa</span></span><br><span class="line"><span class="string">2             4.7          3.2           1.3          0.2     setosa</span></span><br><span class="line"><span class="string">3             4.6          3.1           1.5          0.2     setosa</span></span><br><span class="line"><span class="string">4             5.0          3.6           1.4          0.2     setosa</span></span><br><span class="line"><span class="string">..            ...          ...           ...          ...        ...</span></span><br><span class="line"><span class="string">145           6.7          3.0           5.2          2.3  virginica</span></span><br><span class="line"><span class="string">146           6.3          2.5           5.0          1.9  virginica</span></span><br><span class="line"><span class="string">147           6.5          3.0           5.2          2.0  virginica</span></span><br><span class="line"><span class="string">148           6.2          3.4           5.4          2.3  virginica</span></span><br><span class="line"><span class="string">149           5.9          3.0           5.1          1.8  virginica</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[150 rows x 5 columns]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="数据集划分">数据集划分</h3><p><strong>训练集</strong>(training dataset)：用来拟合参数（e.g. 人工神经网络中神经元之间连接的权重）的样本组成的集合。在训练过程中，当前模型会对训练集中的每个样本进行预测，并将预测结果与目标进行比较。根据比较的结果，学习算法会更新模型的参数。</p><p><strong>验证集</strong>(validation dataset)：用于在训练过程中检验模型的状态、收敛情况。验证集通常用于调整超参数，根据几组模型验证集上的表现决定哪组超参数拥有最好的性能。同时验证集在训练过程中还可以用来监控模型是否发生过拟合，一般来说验证集表现稳定后，若继续训练，训练集表现还会继续上升，但是验证集会出现不升反降的情况，这样一般就发生了过拟合。所以验证集也用来判断何时停止训练。</p><p><strong>测试集</strong>(test dataset)：用来提供对最终模型的无偏评估。评价模型泛化能力，即之前模型使用验证集确定了超参数，使用训练集调整了参数，最后使用一个从没有见过的数据集来判断这个模型是否Work。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=<span class="number">0.2</span>, random_state=<span class="number">22</span>)</span><br></pre></td></tr></table></figure><h2 id="特征预处理">特征预处理</h2><p>数值型数据的无量纲化</p><h3 id="归一化normalization">归一化(normalization)</h3><p>线性缩放，直接把数据压缩到0-1以内。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">minmax_demo</span>():  <span class="comment"># 归一化</span></span><br><span class="line">    <span class="comment"># 1.获取数据</span></span><br><span class="line">    data = [[<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">            [<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">8</span>],</span><br><span class="line">            [<span class="number">5</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># 2.实例化一个转换器类</span></span><br><span class="line">    trasnfer = MinMaxScaler()</span><br><span class="line">    <span class="comment"># 3.调用转换器</span></span><br><span class="line">    data_tran =  trasnfer.fit_transform(data)</span><br><span class="line">    <span class="built_in">print</span>(data_tran)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[[0.         1.         0.44444444 0.57142857]</span></span><br><span class="line"><span class="string"> [1.         0.         0.         1.        ]</span></span><br><span class="line"><span class="string"> [0.75       0.2        1.         0.        ]]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="标准化standardization">标准化(standardization)</h3><p>对于特征值的取值不均匀的特征，可将其取值分布转换为均值为 0 ，方差为1的正态分布。</p><p><span class="math display">\[x^*=\frac{x-mu}{std}\]</span><br />mu平均值；std标准差：衡量集中程度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">standard_demo</span>():    <span class="comment"># 标准化</span></span><br><span class="line">     <span class="comment"># 1.获取数据</span></span><br><span class="line">    data = [[<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">            [<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">8</span>],</span><br><span class="line">            [<span class="number">5</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># 2.实例化一个转换器类</span></span><br><span class="line">    trasnfer = StandardScaler()</span><br><span class="line">    <span class="comment"># 3.调用转换器</span></span><br><span class="line">    data_tran =  trasnfer.fit_transform(data)</span><br><span class="line">    <span class="built_in">print</span>(data_tran)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[[-1.37281295  1.38873015 -0.09053575  0.11624764]</span></span><br><span class="line"><span class="string"> [ 0.98058068 -0.9258201  -1.1769647   1.16247639]</span></span><br><span class="line"><span class="string"> [ 0.39223227 -0.46291005  1.26750044 -1.27872403]]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>处理之后，对每列来说所有数据都聚集在均值为0附近，标准差为1<br />在已有样本足够多的情况下比较稳定，适合嘈杂大数据场景</p><h2 id="特征降维">特征降维</h2><p>消除无关变量，选择较少训练数据，节省训练时间，同时提供模型准确率，缓解过拟合问题。</p><h3 id="特征选择">特征选择</h3><p>数据中包含冗余或相关变量，旨在从原有特征中找出主要特征；</p><p><code>VarianceThreshold</code>舍弃方差&lt;threshold的特征，不填默认为0</p><p>相关系数：特征与特征之间的相程度；Pearson相关系数 取值范围：-1≤r≤1</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> VarianceThreshold</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">variance_demo</span>():    <span class="comment"># 过滤低方差特征</span></span><br><span class="line">    <span class="comment"># 1.获取数据</span></span><br><span class="line">    data = [[<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>], </span><br><span class="line">            [<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>], </span><br><span class="line">            [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>]]</span><br><span class="line">    <span class="comment"># 2.实例化一个转换器类</span></span><br><span class="line">    trasnfer = VarianceThreshold(threshold=<span class="number">3</span>)   </span><br><span class="line">    <span class="comment"># 3.调用转换器</span></span><br><span class="line">    data_tran =  trasnfer.fit_transform(data)</span><br><span class="line">    <span class="built_in">print</span>(data_tran)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[[2, 0],</span></span><br><span class="line"><span class="string"> [1, 4],</span></span><br><span class="line"><span class="string"> [1, 1]] </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></p><h3 id="主成分分析pca">主成分分析(PCA)</h3><p>利用正交变换把由线性相关变量表示的观测数据转换为少数几个由线性无关变量表示的数据，线性无关的变量称为主成分。 <code>sklearn.decomposition.PCA(n_components=None)</code> n_components：①小数：表示保留百分之多少的信息；②整数：表示减少到多少特征</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pca_demo</span>():     <span class="comment"># PCA降维</span></span><br><span class="line">    data = [[<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">            [<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">8</span>],</span><br><span class="line">            [<span class="number">5</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>]]</span><br><span class="line">    <span class="comment"># 1.实例化一个转换器类</span></span><br><span class="line">    transfer = PCA(n_components=<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 2.调用fit_transform</span></span><br><span class="line">    data_tran = transfer.fit_transform(data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;data_tran:\n&quot;</span>, data_tran)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">data_tran:</span></span><br><span class="line"><span class="string"> [[-3.13587302e-16  3.82970843e+00]</span></span><br><span class="line"><span class="string"> [-5.74456265e+00 -1.91485422e+00]</span></span><br><span class="line"><span class="string"> [ 5.74456265e+00 -1.91485422e+00]]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="普通pca">普通PCA</h4><p>PCA用于将多维的数据集分解为一组具有最大方差的连续正交分量。 两种实现方式：特征值分解，奇异值分解。</p><h4 id="增量pcaipca">增量PCA（IPCA）</h4><p>IPCA使用与输入数据样本数无关的内存量为输入数据建立低秩近似，依然依赖于输入数据功能，但更改批量大小可以控制内存使用量。</p><h4 id="使用随机化svd的pca">使用随机化SVD的PCA</h4><h4 id="kernel-pca">Kernel PCA</h4><p>核主成分分析可实现数据的非线性降维，用于处理线性不可分的数据集。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python机器学习】基础配置</title>
      <link href="/2023/03/08/%E3%80%90Python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%91%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/03/08/%E3%80%90Python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%91%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="基础配置">基础配置</h1><h2 id="python库管理anaconda">python库管理：Anaconda</h2><h3 id="介绍">介绍</h3><p>Anaconda是针对python的集成环境，包括Conda、Python及numpy、pandas等一系列常用的工具包。</p><h3 id="好处">好处</h3><ol type="1"><li>包含conda：conda是一个环境管理器，其功能依靠conda包来实现。</li><li>已安装好大量工具包：自动安装基本的python，pyhon版本与anaconda版本有关。该python版本下已经安装好大量工具包，对进行科学分析计算十分便利。（也可以通过pip一个个安装）</li><li>可创建、使用和管理不同版本的python环境。</li></ol><h3 id="安装">安装</h3><p>官网下载：<a href="https://www.anaconda.com/">Anaconda | The World's Most Popular Data Science Platform</a> 安装后，cmd中输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="literal">--version</span></span><br></pre></td></tr></table></figure><p>出现版本号，即成功安装（可能需要提前配置环境变量，详情可百度）</p><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081555680.png" alt="Reny-Pic202303081455050" style="zoom:67%;" /></p><h3 id="创建和管理环境">创建和管理环境</h3><ol type="1"><li><p>查看当前存在哪些虚拟环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081555008.png" alt="Reny-Pic202303081501251" style="zoom:67%;" /></p></li><li><p>检查更新当前conda</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create <span class="literal">-n</span> your_env_name python=x.x</span><br></pre></td></tr></table></figure></li><li><p>激活或切换虚拟环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate your_env_name</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081555875.png" alt="Reny-Pic202303081505453" style="zoom:67%;" /></p></li></ol><h2 id="scikit-learn">Scikit-learn</h2><h3 id="介绍-1">介绍</h3><p>Scikit-learn是用于Python编程语言的自由软件机器学习库。它的特征是具有各种分类、回归和聚类算法，包括支持向量机、随机森林、梯度提升、k-平均聚类和DBSCAN，它被设计协同于Python数值和科学库NumPy和SciPy。</p><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081555977.png" alt="Reny-Pic202303081513874" style="zoom:67%;" /></p><p>Scikit-learn也给出了算法使用图：</p><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081606529.png" alt="Choosing the right estimator — scikit-learn 1.2.1 documentation" style="zoom: 67%;" /></p><h3 id="安装-1">安装</h3><p>直接使用conda安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install <span class="literal">-c</span> anaconda scikit<span class="literal">-learn</span></span><br></pre></td></tr></table></figure><h2 id="pytorch">Pytorch</h2><h3 id="介绍-2">介绍</h3><p>PyTorch是一个开源的Python机器学习库，基于Torch，底层由C++实现，应用于人工智能领域，如计算机视觉和自然语言处理。它主要由Meta Platforms的人工智能研究团队开发。</p><h3 id="安装-2">安装</h3><p>官网安装<a href="https://pytorch.org/get-started/locally/">Start Locally | PyTorch</a></p><p><img src="https://cdn.jsdelivr.net/gh/Solitario119/ImgHosting/Reny-Pic/202303081554611.png" alt="Reny-Pic202303081521161" style="zoom:67%;" /></p><p>复制其中command到Conda Cmd中：<code>conda install pytorch torchvision torchaudio cpuonly -c pytorch</code></p>]]></content>
      
      
      <categories>
          
          <category> Computer Science </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【射频电路设计】电路基础</title>
      <link href="/2023/03/07/%E3%80%90%E5%B0%84%E9%A2%91%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E3%80%91%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/03/07/%E3%80%90%E5%B0%84%E9%A2%91%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E3%80%91%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="基本概念">基本概念</h1><h2 id="导纳电导电纳">导纳、电导、电纳</h2><h3 id="导纳admittance">导纳（admittance）</h3><p><strong>导纳</strong>是<strong>电导</strong>和<strong>电纳</strong>的统称。定义为阻抗（impedance）的倒数，符号Y，单位为西门子（S）。</p><p>导纳是复数，实数部分（电导G）和虚数部分（电纳B）组成：<span class="math inline">\(Y=G+jB\)</span>。</p><p>用来描述交流电通过电路或系统时的困难程度。</p><h3 id="电导g">电导（G）</h3><p>描述负载电荷通过导体的流畅程度。电荷通过越容易，电导值越高。电导值既可用于交流电，也可用于直流电。</p><h3 id="电纳b">电纳（B）</h3><p>描述电子组件、电子电路的就绪状态，或者指当电压改变时系统释放的能量大小。用虚数表示电纳，单位为西门子。<br />电纳只用于描述交流电。当交流电通过一个包含电纳的导体时，可以释放或者产生能量，能量形式为磁场时，电纳为电感性，表示为<span class="math inline">\(-jB\)</span>；当能量形式为电场时，电纳为电容性，表示为<span class="math inline">\(+jB\)</span>。</p><hr /><h2 id="电阻r电抗电导电纳的换算">电阻R、电抗、电导、电纳的换算</h2><p>阻抗 <span class="math inline">\(Z=R+jX\)</span></p><p>导纳 <span class="math inline">\(Y=\frac{1}{Z}=\frac{1}{R+jX}=\frac{R}{R^2+X^2}+j\frac{-X}{R^2+X^2}\)</span></p><p>电导 <span class="math inline">\(G=\frac{R}{R^2+X^2}\)</span></p><p>电纳 <span class="math inline">\(B=\frac{-X}{R^2+X^2}\)</span></p>]]></content>
      
      
      <categories>
          
          <category> Electronic Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 射频电路设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/07/hello-world/"/>
      <url>/2023/03/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
